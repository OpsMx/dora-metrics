package demo.config;

import com.jpmorgan.moneta.boot.ida.client.IdaTokenRetrievalStrategies;
import com.jpmorgan.moneta.boot.ida.client.auth.UsernameAndPasswordProvider;
import com.jpmorgan.moneta.boot.ida.client.blocking.IdaClientTokenProvider;
import com.jpmorgan.moneta.boot.ida.client.blocking.IdaRestClient;
import com.jpmorgan.moneta.boot.ida.client.blocking.IdaTokenProvider;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestClient;

@Configuration
public class RestClientConfig {

    @Value("${application.ida-provider-url}")
    private String providerUrl;

    @Value("${application.ida-protected-resource-uri}")
    private String protectedResourceUri;

    @Value("${application.ida-client-id}")
    private String clientId;

    @Value("${application.ida-client-username}")
    private String clientUsername;

    @Value("${application.ida-client-secret}")
    private String clientSecret;

    @Bean
    public IdaTokenProvider usernamePasswordIdaTokenProvider() {
        return IdaClientTokenProvider.builder().id("username-password-provider").providerUrl(providerUrl)
                .clientId(clientId).resourceUri(protectedResourceUri)
                .tokenRetrievalStrategy(IdaTokenRetrievalStrategies.usernameAndPassword(new UsernameAndPasswordProvider() {
                    @Override
                    public String username() {
                        return clientUsername;
                    }

                    @Override
                    public String password() {
                        return clientSecret;
                    }
                })).build();
    }

    @Bean
    public RestClient usernamePasswordRestClient(final RestClient.Builder restClientBuilder,
            @Qualifier("usernamePasswordIdaTokenProvider") final IdaTokenProvider idaTokenProvider) {
        return IdaRestClient.builder().restClientBuilder(restClientBuilder).tokenProvider(idaTokenProvider)
                .build();
    }

}
